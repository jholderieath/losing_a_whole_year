ID_WILD347  = forcats::as_factor(ID_WILD347)
)
finish_formula <-  PCT_FINISH  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310  +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315  + ID_ANSC409 + ID_ANSC411 +
ID_FOR111  + ID_FOR230 + ID_FOR233 + ID_FOR302 + ID_FOR313 + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_PLSC101  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 +
Instructor_12 + ID_AGBU402+ ID_FOR200 +ID_GISC250 + ID_GISC260 + ID_ANSC340 + ID_PLSC211
pass_formula <-  PCT_PASS  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310 + ID_AGBU402 +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315 + ID_ANSC340 + ID_ANSC409 + ID_ANSC411 +
ID_FOR111 + ID_FOR200  + ID_FOR233 + ID_FOR302  + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_GISC260 +
ID_PLSC211  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 + ID_GISC250 + + ID_FOR313 + ID_FOR230 +ID_PLSC101 +
Instructor_12
A_formula <-  PCT_A  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310 + ID_AGBU402 +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315 + ID_ANSC340 + ID_ANSC409 + ID_ANSC411 +
ID_FOR111 + ID_FOR200 + ID_FOR230 + ID_FOR233 + ID_FOR302 + ID_FOR313 + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_GISC250 + ID_GISC260 +
ID_PLSC101 + ID_PLSC211  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 +
Instructor_12
finish_poisson <- glm(finish_formula, family = poisson(link = "identity"), data = olddat3_dum)
#summary(finish_poisson)
fp <- coeftest(finish_poisson, vcov = vcovHC(finish_poisson, type="HC1"))
?coeftest
??coeftest
library(lmtest)
olddat <- read_excel("sasf_sp21.xls") %>%
rename(grade = `Grade Awarded`) %>%
filter(grade != 'AU') %>%
mutate(termC = as.character(Term)) %>%
filter(str_detect(termC, "3$")) %>%
mutate(Instructor = forcats::as_factor(Instructor),
Course = forcats::as_factor(Course),
Term = forcats::as_factor(termC),
Grade = factor(grade, levels = c("A", "B", "C", "D", "F", "W", "S", "IC"))) %>%
mutate(Dept = forcats::as_factor(str_extract(Course, '[:alpha:]{3,4}')),
Course_Number = forcats::as_factor(str_extract(Course, '[:digit:]{3}'))) %>%
mutate(Upper = forcats::as_factor(ifelse(as.numeric(as.character(Course_Number)) >= 300,1,0))) %>%
unite("ID", Dept:Course_Number, sep = "", remove = TRUE) %>%
mutate(ID = forcats::as_factor(ID)) %>%
dplyr::select(-c(termC,grade,Course))
olddat$Instructor <- olddat$Instructor %>% fct_anon()
olddat$pfw <- fct_recode(olddat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
olddat2 <- olddat %>%
filter(ID != 'OTHER')%>%
fastDummies::dummy_cols() %>%
group_by(ID,Instructor,Term)%>%
summarise(PASSING = sum(Grade_A,Grade_B,Grade_C,Grade_S),
FAILING = sum(Grade_D,Grade_F),
FINISHING = sum(pfw_PASS,pfw_FAIL),
NOTFINISHING = sum(pfw_W,pfw_IC),
n = n(),
EarnA = sum(Grade_A))
olddat3 <- olddat2 %>%
mutate(PCT_PASS = round(PASSING/(PASSING+FAILING)*100),
PCT_FINISH = round(FINISHING/(FINISHING+NOTFINISHING)*100),
PCT_A = round(EarnA/(PASSING+FAILING)*100)
)
olddat3u <- ifelse(as.numeric(stringr::str_extract(olddat3$ID,'[:digit:]{3}$'))>299,1,0)
olddat3u <- replace_na(olddat3u,1)
olddat3_dum <- olddat3 %>%
add_column(UPPER = olddat3u)%>%
fastDummies::dummy_cols() %>%
mutate(
Term_20183     = forcats::as_factor(Term_20183),
Term_20193     = forcats::as_factor(Term_20193),
Term_20203     = forcats::as_factor(Term_20203),
UPPER     = forcats::as_factor(UPPER),
Instructor_11  = forcats::as_factor(Instructor_11),
Instructor_12  = forcats::as_factor(Instructor_12),
ID_AGBU310  = forcats::as_factor(ID_AGBU310),
ID_AGBU402  = forcats::as_factor(ID_AGBU402),
ID_AGSC211  = forcats::as_factor(ID_AGSC211),
ID_AGSC320  = forcats::as_factor(ID_AGSC320),
ID_AGSC411  = forcats::as_factor(ID_AGSC411),
ID_ANSC223  = forcats::as_factor(ID_ANSC223),
ID_ANSC224  = forcats::as_factor(ID_ANSC224),
ID_ANSC230  = forcats::as_factor(ID_ANSC230),
ID_ANSC301  = forcats::as_factor(ID_ANSC301),
ID_ANSC315  = forcats::as_factor(ID_ANSC315),
ID_ANSC340  = forcats::as_factor(ID_ANSC340),
ID_ANSC409  = forcats::as_factor(ID_ANSC409),
ID_ANSC411  = forcats::as_factor(ID_ANSC411),
ID_FOR111   = forcats::as_factor(ID_FOR111),
ID_FOR200   = forcats::as_factor(ID_FOR200),
ID_FOR230   = forcats::as_factor(ID_FOR230),
ID_FOR233   = forcats::as_factor(ID_FOR233),
ID_FOR302   = forcats::as_factor(ID_FOR302),
ID_FOR313   = forcats::as_factor(ID_FOR313),
ID_FOR402   = forcats::as_factor(ID_FOR402),
ID_FOR404   = forcats::as_factor(ID_FOR404),
ID_FOR480   = forcats::as_factor(ID_FOR480),
ID_GISC250  = forcats::as_factor(ID_GISC250),
ID_GISC260  = forcats::as_factor(ID_GISC260),
ID_PLSC101  = forcats::as_factor(ID_PLSC101),
ID_PLSC211  = forcats::as_factor(ID_PLSC211),
ID_PLSC284  = forcats::as_factor(ID_PLSC284),
ID_PLSC310  = forcats::as_factor(ID_PLSC310),
ID_PLSC311  = forcats::as_factor(ID_PLSC311),
ID_PLSC312  = forcats::as_factor(ID_PLSC312),
ID_PLSC400  = forcats::as_factor(ID_PLSC400),
ID_WILD314  = forcats::as_factor(ID_WILD314),
ID_WILD347  = forcats::as_factor(ID_WILD347)
)
finish_formula <-  PCT_FINISH  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310  +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315  + ID_ANSC409 + ID_ANSC411 +
ID_FOR111  + ID_FOR230 + ID_FOR233 + ID_FOR302 + ID_FOR313 + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_PLSC101  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 +
Instructor_12 + ID_AGBU402+ ID_FOR200 +ID_GISC250 + ID_GISC260 + ID_ANSC340 + ID_PLSC211
pass_formula <-  PCT_PASS  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310 + ID_AGBU402 +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315 + ID_ANSC340 + ID_ANSC409 + ID_ANSC411 +
ID_FOR111 + ID_FOR200  + ID_FOR233 + ID_FOR302  + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_GISC260 +
ID_PLSC211  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 + ID_GISC250 + + ID_FOR313 + ID_FOR230 +ID_PLSC101 +
Instructor_12
A_formula <-  PCT_A  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310 + ID_AGBU402 +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315 + ID_ANSC340 + ID_ANSC409 + ID_ANSC411 +
ID_FOR111 + ID_FOR200 + ID_FOR230 + ID_FOR233 + ID_FOR302 + ID_FOR313 + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_GISC250 + ID_GISC260 +
ID_PLSC101 + ID_PLSC211  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 +
Instructor_12
finish_poisson <- glm(finish_formula, family = poisson(link = "identity"), data = olddat3_dum)
#summary(finish_poisson)
fp <- coeftest(finish_poisson, vcov = vcovHC(finish_poisson, type="HC1"))
??vcovHC
library(sandwich)
olddat <- read_excel("sasf_sp21.xls") %>%
rename(grade = `Grade Awarded`) %>%
filter(grade != 'AU') %>%
mutate(termC = as.character(Term)) %>%
filter(str_detect(termC, "3$")) %>%
mutate(Instructor = forcats::as_factor(Instructor),
Course = forcats::as_factor(Course),
Term = forcats::as_factor(termC),
Grade = factor(grade, levels = c("A", "B", "C", "D", "F", "W", "S", "IC"))) %>%
mutate(Dept = forcats::as_factor(str_extract(Course, '[:alpha:]{3,4}')),
Course_Number = forcats::as_factor(str_extract(Course, '[:digit:]{3}'))) %>%
mutate(Upper = forcats::as_factor(ifelse(as.numeric(as.character(Course_Number)) >= 300,1,0))) %>%
unite("ID", Dept:Course_Number, sep = "", remove = TRUE) %>%
mutate(ID = forcats::as_factor(ID)) %>%
dplyr::select(-c(termC,grade,Course))
olddat$Instructor <- olddat$Instructor %>% fct_anon()
olddat$pfw <- fct_recode(olddat$Grade, "PASS" = "A", "PASS" = "B", "PASS" = "C", "PASS" = "S", "FAIL" = "D", "FAIL" = "F")
olddat2 <- olddat %>%
filter(ID != 'OTHER')%>%
fastDummies::dummy_cols() %>%
group_by(ID,Instructor,Term)%>%
summarise(PASSING = sum(Grade_A,Grade_B,Grade_C,Grade_S),
FAILING = sum(Grade_D,Grade_F),
FINISHING = sum(pfw_PASS,pfw_FAIL),
NOTFINISHING = sum(pfw_W,pfw_IC),
n = n(),
EarnA = sum(Grade_A))
olddat3 <- olddat2 %>%
mutate(PCT_PASS = round(PASSING/(PASSING+FAILING)*100),
PCT_FINISH = round(FINISHING/(FINISHING+NOTFINISHING)*100),
PCT_A = round(EarnA/(PASSING+FAILING)*100)
)
olddat3u <- ifelse(as.numeric(stringr::str_extract(olddat3$ID,'[:digit:]{3}$'))>299,1,0)
olddat3u <- replace_na(olddat3u,1)
olddat3_dum <- olddat3 %>%
add_column(UPPER = olddat3u)%>%
fastDummies::dummy_cols() %>%
mutate(
Term_20183     = forcats::as_factor(Term_20183),
Term_20193     = forcats::as_factor(Term_20193),
Term_20203     = forcats::as_factor(Term_20203),
UPPER     = forcats::as_factor(UPPER),
Instructor_11  = forcats::as_factor(Instructor_11),
Instructor_12  = forcats::as_factor(Instructor_12),
ID_AGBU310  = forcats::as_factor(ID_AGBU310),
ID_AGBU402  = forcats::as_factor(ID_AGBU402),
ID_AGSC211  = forcats::as_factor(ID_AGSC211),
ID_AGSC320  = forcats::as_factor(ID_AGSC320),
ID_AGSC411  = forcats::as_factor(ID_AGSC411),
ID_ANSC223  = forcats::as_factor(ID_ANSC223),
ID_ANSC224  = forcats::as_factor(ID_ANSC224),
ID_ANSC230  = forcats::as_factor(ID_ANSC230),
ID_ANSC301  = forcats::as_factor(ID_ANSC301),
ID_ANSC315  = forcats::as_factor(ID_ANSC315),
ID_ANSC340  = forcats::as_factor(ID_ANSC340),
ID_ANSC409  = forcats::as_factor(ID_ANSC409),
ID_ANSC411  = forcats::as_factor(ID_ANSC411),
ID_FOR111   = forcats::as_factor(ID_FOR111),
ID_FOR200   = forcats::as_factor(ID_FOR200),
ID_FOR230   = forcats::as_factor(ID_FOR230),
ID_FOR233   = forcats::as_factor(ID_FOR233),
ID_FOR302   = forcats::as_factor(ID_FOR302),
ID_FOR313   = forcats::as_factor(ID_FOR313),
ID_FOR402   = forcats::as_factor(ID_FOR402),
ID_FOR404   = forcats::as_factor(ID_FOR404),
ID_FOR480   = forcats::as_factor(ID_FOR480),
ID_GISC250  = forcats::as_factor(ID_GISC250),
ID_GISC260  = forcats::as_factor(ID_GISC260),
ID_PLSC101  = forcats::as_factor(ID_PLSC101),
ID_PLSC211  = forcats::as_factor(ID_PLSC211),
ID_PLSC284  = forcats::as_factor(ID_PLSC284),
ID_PLSC310  = forcats::as_factor(ID_PLSC310),
ID_PLSC311  = forcats::as_factor(ID_PLSC311),
ID_PLSC312  = forcats::as_factor(ID_PLSC312),
ID_PLSC400  = forcats::as_factor(ID_PLSC400),
ID_WILD314  = forcats::as_factor(ID_WILD314),
ID_WILD347  = forcats::as_factor(ID_WILD347)
)
finish_formula <-  PCT_FINISH  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310  +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315  + ID_ANSC409 + ID_ANSC411 +
ID_FOR111  + ID_FOR230 + ID_FOR233 + ID_FOR302 + ID_FOR313 + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_PLSC101  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 +
Instructor_12 + ID_AGBU402+ ID_FOR200 +ID_GISC250 + ID_GISC260 + ID_ANSC340 + ID_PLSC211
pass_formula <-  PCT_PASS  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310 + ID_AGBU402 +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315 + ID_ANSC340 + ID_ANSC409 + ID_ANSC411 +
ID_FOR111 + ID_FOR200  + ID_FOR233 + ID_FOR302  + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_GISC260 +
ID_PLSC211  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 + ID_GISC250 + + ID_FOR313 + ID_FOR230 +ID_PLSC101 +
Instructor_12
A_formula <-  PCT_A  ~ Term_20203 + Term_20193 + UPPER +
ID_AGBU310 + ID_AGBU402 +
ID_AGSC211 + ID_AGSC320 + ID_AGSC411 +
ID_ANSC230 + ID_ANSC223 + ID_ANSC224 + ID_ANSC301 + ID_ANSC315 + ID_ANSC340 + ID_ANSC409 + ID_ANSC411 +
ID_FOR111 + ID_FOR200 + ID_FOR230 + ID_FOR233 + ID_FOR302 + ID_FOR313 + ID_FOR402 + ID_FOR404 + ID_FOR480 +
ID_GISC250 + ID_GISC260 +
ID_PLSC101 + ID_PLSC211  + ID_PLSC310 + ID_PLSC311 + ID_PLSC312 + ID_PLSC400 +
ID_WILD314 +
Instructor_12
finish_poisson <- glm(finish_formula, family = poisson(link = "identity"), data = olddat3_dum)
#summary(finish_poisson)
fp <- coeftest(finish_poisson, vcov = vcovHC(finish_poisson, type="HC1"))
#fp
pass_poisson <- glm(pass_formula, family = poisson(link = "identity"), data = olddat3_dum )
#summary(pass_poisson)
pp <- coeftest(pass_poisson, vcov = vcovHC(pass_poisson, type="HC1"))
#pp
a_poisson <- glm(A_formula, family = quasipoisson, data = olddat3_dum)
#summary(a_poisson)
pa <- coeftest(a_poisson, vcov = vcovHC(a_poisson, type="HC1"))
#pa
ggFinish <- ggpredict(finish_poisson,  "Term_20203")
predict_Finish <- plot(ggFinish, add.data = TRUE) +
xlab('Spring 2020 Binary') +
ylab('Predicted Percent \nFinishing') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
#predict_Finish
#Fig 2 Panel B
ggPass <- ggpredict(pass_poisson, terms = "Term_20203")
predict_Pass <- plot(ggPass, add.data = TRUE) +
xlab('Spring 2020 Binary') +
ylab('Predicted Percent \nPassing') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
#predict_Pass
#Fig 2 Panel C
ggA <- ggpredict(a_poisson, terms = "Term_20203")
predict_A <- plot(ggA,add.data = TRUE) +
xlab('Spring 2020 Binary') +
ylab('Predicted Percent \nEarning A') +
ggtitle('')+
cowplot::theme_minimal_hgrid(11)
#predict_A
#Fig 2 Combined
predict <- cowplot::plot_grid(predict_Finish,predict_Pass,predict_A,
labels = c("A. Predicted Percent Finishing",
"B. Predicted Percent Passing",
"C. Predicted Percent Earning an A"),
label_size = 10, hjust = 0, ncol = 1)
predict
#Fig 2 Combined
predict <- cowplot::plot_grid(predict_Finish,predict_Pass,predict_A,
labels = c("A. Predicted Percent Finishing",
"B. Predicted Percent Passing",
"C. Predicted Percent Earning an A"),
label_size = 10, hjust = 0, ncol = 3)
predict
hist_FINISH_v <- ggplot(d3_dum, aes(x=Term, y=PCT_FINISH)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
scale_y_continuous(expand = c(0.1, .1))+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
hist_FINISH_v <- ggplot(olddat3_dum, aes(x=Term, y=PCT_FINISH)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
scale_y_continuous(expand = c(0.1, .1))+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
sp1 <- plotly::ggplotly(hist_FINISH_v)
#Fig 3 Panel B
hist_PASS_v <- ggplot(olddat3_dum, aes(x=Term, y=PCT_PASS)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19","20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
sp2 <- plotly::ggplotly(hist_PASS_v)
#Fig 3 Panel C
hist_A_v <- ggplot(olddat3_dum, aes(x=Term, y=PCT_A)) +
geom_violin()+
geom_boxplot(width=0.1)+
xlab('Term') +
ylab('Historic Percent \nEarning A') +
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
scale_y_continuous(expand = c(0.1, .1))+
cowplot::theme_minimal_hgrid(11)
sp3 <- plotly::ggplotly(hist_A_v)
subplot(sp1, sp2, sp3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution of Percent Finishing",
"B. Historic Distribution of Percent Passing",
"C. Historic Distribution of Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 1)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution of Percent Finishing",
"B. Historic Distribution of Percent Passing",
"C. Historic Distribution of Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3)
subplot(sp1, sp2, sp3)
sp3 <- plotly::ggplotly(hist_A_v,
box = list(
visible = T
),
meanline = list(
visible = T
))
subplot(sp1, sp2, sp3)
sp3
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution of Percent Finishing",
"B. Historic Distribution of Percent Passing",
"C. Historic Distribution of Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = -5,  ncol = 3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 15,  ncol = 3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 11,  ncol = 3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 1,  ncol = 3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3, vjust = 5)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3, vjust = -5)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3, vjust = -1)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0,  ncol = 3, vjust = 1)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 1,  ncol = 3, vjust = 1)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0.5,  ncol = 3, vjust = 1)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0.75,  ncol = 3, vjust = 1)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = 0.25,  ncol = 3, vjust = 1)
cowplot::plot_grid(hist_FINISH_v,hist_PASS_v,hist_A_v,
labels = c("A. Historic Distribution \nof Percent Finishing",
"B. Historic Distribution \nof Percent Passing",
"C. Historic Distribution \nof Percent Earning an A"),
label_size = 10, hjust = -0.25,  ncol = 3, vjust = 1)
olddat3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
`%notin%` <- Negate(`%in%`)
olddat3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
??stat_regline_equation
library(ggpubr)
olddat3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
olddat3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_FINISH,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nFinishing') +
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19", "20203" = "SP20"))+
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
cowplot::theme_minimal_hgrid(11)
hist_PASS <-  olddat3_dum %>%
filter(ID %notin% c('ANSC223','ANSC230','ANSC301','ANSC315','PLSC312','WILD314')) %>%
ggplot(aes(x = Term, y = PCT_PASS,   group =   interaction(UPPER,ID)))+
geom_point() +
geom_smooth(method = 'lm',se=FALSE, size=1)+
stat_regline_equation(label.y=25, size = 2.5)+
facet_wrap('ID',nrow = 4)+
xlab('Term') +
ylab('Historic Percent \nPassing') +
scale_y_continuous(breaks=c(33,66,100), limits=c(0, NA))+
ggtitle('')+
theme(legend.position="none")+
scale_x_discrete(labels=c("20183" = "SP18", "20193" = "SP19",  "20203" = "SP20"))+
cowplot::theme_minimal_hgrid(11)
plotly::ggplotly(hist_PASS)
warnings()
warning()
ggplotly(predict_A)
ggplotly(predict)
